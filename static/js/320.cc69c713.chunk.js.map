{"version":3,"file":"static/js/320.cc69c713.chunk.js","mappings":"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","sources":["services/auth/index.ts","services/client/index.ts","components/pages/AuthPage/AuthPage.tsx","services/index.ts"],"sourcesContent":["import $api from \"..\";\r\nimport qs from \"qs\";\r\nimport { AxiosResponse } from \"axios\";\r\n\r\ninterface ITokenResponse {\r\n  access_token: string;\r\n  expires_in: number;\r\n  token_type: string;\r\n  scope: string;\r\n  refresh_token: string;\r\n}\r\n\r\nexport async function getToken(\r\n  login: string,\r\n  password: string,\r\n  appId: string,\r\n  appSecret: string\r\n): Promise<AxiosResponse<ITokenResponse>> {\r\n  const response = $api.post(\r\n    \"/oauth/token\",\r\n    qs.stringify({\r\n      grant_type: \"password\",\r\n      username: login,\r\n      password: password,\r\n      client_id: appId,\r\n      client_secret: appSecret,\r\n    })\r\n  );\r\n  return response;\r\n}\r\n","import { AxiosResponse } from \"axios\";\r\nimport $api from \"..\";\r\n\r\ninterface IClientResponse {\r\n  id: number;\r\n  login: string;\r\n  admin: boolean;\r\n  dealer_id: number | null;\r\n  client_id: number;\r\n  extension_group_id: number | null;\r\n  extension_id: number | null;\r\n  timezone: string;\r\n  access: string;\r\n  extra_params: string | null;\r\n}\r\n\r\nexport async function getClient(): Promise<AxiosResponse<IClientResponse>> {\r\n  const response = await $api.get(\"/api/ver1.0/user/\");\r\n  return response;\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  setLogin,\r\n  setPassword,\r\n  setAppId,\r\n  setAppSecret,\r\n} from \"../../../store/authSlice/authSlice\";\r\nimport { getToken } from \"../../../services/auth\";\r\nimport { getClient } from \"../../../services/client\";\r\nimport { IState } from \"../../../store/store\";\r\nimport \"./AuthPage.scss\";\r\n\r\nexport function AuthPage() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { login, password, appId, appSecret } = useSelector(\r\n    (state: IState) => state.auth\r\n  );\r\n\r\n  function changeHandler(e: React.ChangeEvent<HTMLInputElement>): void {\r\n    if (e.target.id === \"login\") {\r\n      dispatch(setLogin(e.target.value));\r\n    } else if (e.target.id === \"password\") {\r\n      dispatch(setPassword(e.target.value));\r\n    } else if (e.target.id === \"app-id\") {\r\n      dispatch(setAppId(e.target.value));\r\n    } else if (e.target.id === \"app-secret\") {\r\n      dispatch(setAppSecret(e.target.value));\r\n    }\r\n  }\r\n\r\n  function pasteTestInfo(e: React.MouseEvent<HTMLButtonElement>) {\r\n    e.preventDefault();\r\n    dispatch(setLogin(\"Muhin_Ivan\"));\r\n    dispatch(setPassword(\"123qweasdZXC\"));\r\n    dispatch(setAppId(\"f8115578ec7246369ab37f73adb10c62\"));\r\n    dispatch(setAppSecret(\"1e1c99cc6ba94893a7616e2ececaaf28\"));\r\n  }\r\n\r\n  function clearAll() {\r\n    dispatch(setLogin(\"\"));\r\n    dispatch(setPassword(\"\"));\r\n    dispatch(setAppId(\"\"));\r\n    dispatch(setAppSecret(\"\"));\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  async function handleFormSubmit(e: React.SyntheticEvent<EventTarget>) {\r\n    e.preventDefault();\r\n    await getToken(login, password, appId, appSecret)\r\n      .then((response) => {\r\n        sessionStorage.setItem(\"accessToken\", response.data.access_token);\r\n        sessionStorage.setItem(\"refreshToken\", response.data.refresh_token);\r\n        getClient()\r\n          .then((response) => {\r\n            sessionStorage.setItem(\"clientId\", String(response.data.client_id));\r\n            navigate(\"/all-extensions\");\r\n          })\r\n          .catch((e) => {\r\n            clearAll();\r\n            return e;\r\n          });\r\n      })\r\n      .catch(() => {\r\n        clearAll();\r\n        alert(\"Что-то пошло не так. Попробуйте еще раз\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth\" data-testid=\"auth\">\r\n      <div className=\"container auth__container\">\r\n        <h1 className=\"heading auth__heading\">Аутентификация</h1>\r\n        <form className=\"form auth__form\" onSubmit={handleFormSubmit}>\r\n          <label className=\"form__field\">\r\n            Ваш App ID{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              onChange={changeHandler}\r\n              value={appId}\r\n              id=\"app-id\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <label className=\"form__field\">\r\n            {\" \"}\r\n            Ваш App Secret{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              onChange={changeHandler}\r\n              value={appSecret}\r\n              id=\"app-secret\"\r\n            />\r\n          </label>\r\n\r\n          <br />\r\n          <br />\r\n          <label className=\"form__field\">\r\n            Логин{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              onChange={changeHandler}\r\n              value={login}\r\n              id=\"login\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <label className=\"form__field\">\r\n            Пароль{\" \"}\r\n            <input\r\n              type=\"password\"\r\n              onChange={changeHandler}\r\n              value={password}\r\n              id=\"password\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <div className=\"auth__buttons\">\r\n            <input\r\n              type=\"submit\"\r\n              className=\"button button_primary auth__button btn-reset\"\r\n              value=\"Отправить информацию\"\r\n            />\r\n            <button\r\n              className=\"button button_secondary auth__button auth__button_right btn-reset\"\r\n              onClick={pasteTestInfo}\r\n              data-testid=\"test_info\"\r\n            >\r\n              Заполнить тестовой информацией\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://apiproxy.telphin.ru/\";\r\n\r\nexport const $api = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\n$api.interceptors.request.use((config: any) => {\r\n  config.headers.Authorization = `Bearer ${sessionStorage.getItem(\r\n    \"accessToken\"\r\n  )}`;\r\n  return config;\r\n});\r\n\r\nexport default $api;\r\n"],"names":["getToken","login","password","appId","appSecret","response","$api","qs","grant_type","username","client_id","client_secret","getClient","AuthPage","navigate","useNavigate","dispatch","useDispatch","useSelector","state","auth","changeHandler","e","target","id","setLogin","value","setPassword","setAppId","setAppSecret","clearAll","sessionStorage","clear","preventDefault","then","setItem","data","access_token","refresh_token","String","catch","alert","className","onSubmit","type","onChange","onClick","axios","baseURL","interceptors","request","use","config","headers","Authorization","getItem"],"sourceRoot":""}