{"version":3,"file":"static/js/754.b7ccc344.chunk.js","mappings":"iQAGO,SAAeA,EAAtB,iDAAO,OAAP,0BAAO,WACLC,EACAC,GAFK,+FAIEC,EAAAA,EAAAA,OAAA,6BAAkCF,EAAlC,sBAAwDC,KAJ1D,kE,aCKA,SAASE,IACd,IAIIC,EAJIH,GAAgBI,EAAAA,EAAAA,MAAhBJ,YACAK,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAmBA,EAAMF,UAAzB,IAA3BA,WACFG,GAAWC,EAAAA,EAAAA,MAIXC,GAAWC,EAAAA,EAAAA,MAEbZ,EAAWa,eAAeC,QAAQ,YATF,8CAepC,uFACMd,IAAYC,EADlB,gCAEUF,EAAgBC,EAAUC,GAC7Bc,MAAK,WACJN,GACEO,EAAAA,EAAAA,IACEV,EAAWW,QAAO,SAACC,GACjB,OAAOA,EAAKC,MAAQlB,CACrB,MAGLU,EAAS,kBACV,IACAI,MAAK,kBACJK,MAAM,yUADF,IAGLC,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZX,EAAS,QACV,IAnBP,4CAfoC,sBAsCpCL,EAAWmB,SAAQ,SAACP,GACdA,EAAKC,MAAQlB,IACfG,EAAkBc,EAErB,IAED,MAUId,EATFsB,EADF,EACEA,KACAC,EAFF,EAEEA,OACAC,EAHF,EAGEA,KACAC,EAJF,EAIEA,OACAC,EALF,EAKEA,MACAC,EANF,EAMEA,aACAC,EAPF,EAOEA,gBACAC,EARF,EAQEA,eACAC,EATF,EASEA,YAGF,OACE,gBAAKC,UAAU,mBAAf,UACE,iBAAKA,UAAU,wCAAf,WACE,eAAIA,UAAU,oCAAd,8LAGA,gBAAIA,UAAU,8BAAd,WACE,gBAAIA,UAAU,yCAAd,8CACS,gCAAQT,GAAQ,+DAAhB,WAET,gBAAIS,UAAU,yCAAd,6CACQ,gCAAQR,GAAU,sEAE1B,gBAAIQ,UAAU,yCAAd,kCACO,gCAAQP,GAAQ,sEAEvB,gBAAIO,UAAU,yCAAd,mDACS,gCAAQN,GAAU,sEAE3B,gBAAIM,UAAU,yCAAd,yDACU,gCAAQL,GAAS,sEAE3B,gBAAIK,UAAU,yCAAd,sEACa,gCAAQJ,GAAgB,sEAErC,gBAAII,UAAU,yCAAd,8IAEE,gCAAQH,GAAmB,sEAE7B,gBAAIG,UAAU,yCAAd,qGACmB,gCAAQF,GAAkB,sEAE7C,gBAAIE,UAAU,yCAAd,wFACgB,gCAAQD,GAAe,yEAGzC,iBAAKC,UAAU,qCAAf,WACE,mBACEA,UAAU,6DACVC,QA/F0B,2CA6F5B,iHAMA,mBACED,UAAU,4DACVC,QA1FV,WACEzB,EAAS,kBACV,EAsFO,sHAUT,C,qCCjHYT,E,MAAOmC,GAAAA,OAAa,CAC/BC,QAHe,iCAMjBpC,EAAKqC,aAAaC,QAAQC,KAAI,SAACC,GAI7B,OAHAA,EAAOC,QAAQC,cAAf,iBAAyC/B,eAAeC,QACtD,gBAEK4B,CACR,IAED,K","sources":["services/chosenExtension/index.ts","components/pages/ChosenExtensionPage/ChosenExtensionPage.tsx","services/index.ts"],"sourcesContent":["import $api from \"..\";\r\nimport { AxiosResponse } from \"axios\";\r\n\r\nexport async function deleteExtension(\r\n  clientId: string,\r\n  extensionId: string\r\n): Promise<AxiosResponse> {\r\n  return $api.delete(`/api/ver1.0/client/${clientId}/extension/${extensionId}`);\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { setExtensions } from \"../../../store/extensionsSlice/extensionsSlice\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { deleteExtension } from \"../../../services/chosenExtension\";\r\nimport { IState } from \"../../../store/store\";\r\nimport { IExtension } from \"../../../services/extensions/index\";\r\nimport \"./ChosenExtensionPage.scss\";\r\n\r\nexport function ChosenExtensionPage() {\r\n  const { extensionId } = useParams();\r\n  const { extensions } = useSelector((state: IState) => state.extensions);\r\n  const dispatch = useDispatch();\r\n\r\n  let extensionObject: IExtension;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  let clientId = sessionStorage.getItem(\"clientId\");\r\n\r\n  function handleReturn() {\r\n    navigate(\"/all-extensions\");\r\n  }\r\n\r\n  async function handleDeletion() {\r\n    if (clientId && extensionId) {\r\n      await deleteExtension(clientId, extensionId)\r\n        .then(() => {\r\n          dispatch(\r\n            setExtensions(\r\n              extensions.filter((item: IExtension) => {\r\n                return item.id !== +extensionId;\r\n              })\r\n            )\r\n          );\r\n          navigate(\"/all-extensions\");\r\n        })\r\n        .then(() =>\r\n          alert(\"Успешно удалено. После закрытия окна вы будете перенаправлены\")\r\n        )\r\n        .catch((e) => {\r\n          console.log(e);\r\n          navigate(\"/auth\");\r\n        });\r\n    }\r\n  }\r\n\r\n  extensions.forEach((item: IExtension) => {\r\n    if (item.id === +extensionId!) {\r\n      extensionObject = item;\r\n    }\r\n  });\r\n\r\n  const {\r\n    name,\r\n    domain,\r\n    type,\r\n    status,\r\n    label,\r\n    extra_params,\r\n    dial_rule_limit,\r\n    caller_id_name,\r\n    create_date,\r\n  } = extensionObject!;\r\n\r\n  return (\r\n    <div className=\"chosen-extension\">\r\n      <div className=\"container chosen-extension__container\">\r\n        <h1 className=\"heading chosen-extension__heading\">\r\n          Информация&nbsp;по выбранному номеру:\r\n        </h1>\r\n        <ul className=\"list chosen-extension__list\">\r\n          <li className=\"chosen-extension__list-item list-reset\">\r\n            Номер: <span> {name || \"Неизвестно\"} </span>\r\n          </li>\r\n          <li className=\"chosen-extension__list-item list-reset\">\r\n            Домен:<span> {domain || \"Неизвестно\"}</span>\r\n          </li>\r\n          <li className=\"chosen-extension__list-item list-reset\">\r\n            Тип: <span> {type || \"Неизвестно\"}</span>\r\n          </li>\r\n          <li className=\"chosen-extension__list-item list-reset\">\r\n            Статус:<span> {status || \"Неизвестно\"}</span>\r\n          </li>\r\n          <li className=\"chosen-extension__list-item list-reset\">\r\n            Заметка:<span> {label || \"Неизвестно\"}</span>\r\n          </li>\r\n          <li className=\"chosen-extension__list-item list-reset\">\r\n            Параметры: <span> {extra_params || \"Неизвестно\"}</span>\r\n          </li>\r\n          <li className=\"chosen-extension__list-item list-reset\">\r\n            Ограничения соединения:\r\n            <span> {dial_rule_limit || \"Неизвестно\"}</span>\r\n          </li>\r\n          <li className=\"chosen-extension__list-item list-reset\">\r\n            Имя вызывающего: <span> {caller_id_name || \"Неизвестно\"}</span>\r\n          </li>\r\n          <li className=\"chosen-extension__list-item list-reset\">\r\n            Дата создания:<span> {create_date || \"Неизвестно\"}</span>\r\n          </li>\r\n        </ul>\r\n        <div className=\"chosen-extension__button-container\">\r\n          <button\r\n            className=\"button btn-reset button_secondary chosen-extension__button\"\r\n            onClick={handleDeletion}\r\n          >\r\n            Удалить этот номер\r\n          </button>\r\n          <button\r\n            className=\"button btn-reset button_primary  chosen-extension__button\"\r\n            onClick={handleReturn}\r\n          >\r\n            Вернуться обратно\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://apiproxy.telphin.ru/\";\r\n\r\nexport const $api = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\n$api.interceptors.request.use((config: any) => {\r\n  config.headers.Authorization = `Bearer ${sessionStorage.getItem(\r\n    \"accessToken\"\r\n  )}`;\r\n  return config;\r\n});\r\n\r\nexport default $api;\r\n"],"names":["deleteExtension","clientId","extensionId","$api","ChosenExtensionPage","extensionObject","useParams","extensions","useSelector","state","dispatch","useDispatch","navigate","useNavigate","sessionStorage","getItem","then","setExtensions","filter","item","id","alert","catch","e","console","log","forEach","name","domain","type","status","label","extra_params","dial_rule_limit","caller_id_name","create_date","className","onClick","axios","baseURL","interceptors","request","use","config","headers","Authorization"],"sourceRoot":""}