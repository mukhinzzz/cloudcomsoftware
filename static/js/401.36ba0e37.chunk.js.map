{"version":3,"file":"static/js/401.36ba0e37.chunk.js","mappings":"sTAOO,SAASA,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAFQ,8CAIzB,2FACQC,EAAcC,eAAeC,QAAQ,eACrCC,EAAWF,eAAeC,QAAQ,YAEpCF,GAAeG,GACjBC,EAAAA,EAAAA,GAAcD,GACXE,MAAK,SAACC,GACLV,GAASW,EAAAA,EAAAA,IAAcD,EAASE,OAChCV,EAAS,kBACV,IACAW,OAAM,kBAAMX,EAAS,QAAf,IAETA,EAAS,SAZb,4CAJyB,sBAoBzB,OACE,gBAAKY,UAAU,OAAO,cAAY,OAAlC,UACE,iBAAKA,UAAU,4BAAf,WACE,eAAIA,UAAU,wBAAd,gHACA,iBAAKA,UAAU,aAAf,WACE,iBAAKA,UAAU,oBAAf,WACE,eAAIA,UAAU,0CAAd,+FAEM,KACN,eAAIA,UAAU,0CAAd,iMAEM,KACN,eAAIA,UAAU,0CAAd,+LAIF,gBAAKA,UAAU,WAAWC,IAAKC,EAASC,IAAI,kBAG9C,mBACEH,UAAU,+CACVI,QAzCiB,2CA0CjB,cAAY,cAHd,8JAUP,C,yFCjCM,SAAeV,EAAtB,+CAAO,OAAP,0BAAO,WACLD,GADK,4FAGkBY,EAAAA,EAAAA,IAAA,6BAA+BZ,EAA/B,gBAHlB,cAGCG,EAHD,yBAKEA,GALF,kE,qCCnBMS,E,MAAOC,GAAAA,OAAa,CAC/BC,QAHe,iCAMjBF,EAAKG,aAAaC,QAAQC,KAAI,SAACC,GAI7B,OAHAA,EAAOC,QAAQC,cAAf,iBAAyCtB,eAAeC,QACtD,gBAEKmB,CACR,IAED,K","sources":["components/pages/MainPage/MainPage.tsx","services/extensions/index.ts","services/index.ts"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { getExtensions } from \"../../../services/extensions\";\r\nimport { setExtensions } from \"../../../store/extensionsSlice/extensionsSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport phoneBg from \"../../../img/phone-bg.png\";\r\nimport \"./MainPage.scss\";\r\n\r\nexport function MainPage() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  async function handleGetExtensions() {\r\n    const accessToken = sessionStorage.getItem(\"accessToken\");\r\n    const clientId = sessionStorage.getItem(\"clientId\");\r\n\r\n    if (accessToken && clientId) {\r\n      getExtensions(clientId)\r\n        .then((response) => {\r\n          dispatch(setExtensions(response.data));\r\n          navigate(\"/all-extensions\");\r\n        })\r\n        .catch(() => navigate(\"/auth\"));\r\n    } else {\r\n      navigate(\"/auth\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\" data-testid=\"main\">\r\n      <div className=\"container main__container\">\r\n        <h1 className=\"heading main__heading\">Добавочные номера</h1>\r\n        <div className=\"main__info\">\r\n          <div className=\"main__description\">\r\n            <ul className=\"main__description_first-line list-reset\">\r\n              Здесь вы можете:\r\n            </ul>{\" \"}\r\n            <li className=\"main__description_other-line list-reset\">\r\n              - Проверить свои добавочные номера\r\n            </li>{\" \"}\r\n            <li className=\"main__description_other-line list-reset\">\r\n              - Удалить ненужные вам добавочные\r\n            </li>\r\n          </div>\r\n          <img className=\"main__bg\" src={phoneBg} alt=\"telephone\" />\r\n        </div>\r\n\r\n        <button\r\n          className=\"button button_primary main__button btn-reset\"\r\n          onClick={handleGetExtensions}\r\n          data-testid=\"main button\"\r\n        >\r\n          Посмотреть мои добавочные\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import $api from \"..\";\r\nimport { AxiosResponse } from \"axios\";\r\n\r\nexport interface IExtension {\r\n  id: number;\r\n  name: string;\r\n  domain: string;\r\n  type: string;\r\n  status: string | null;\r\n  label: string | null;\r\n  client_id: number;\r\n  extension_group_id: number | null;\r\n  extra_params: string | null;\r\n  dial_rule_limit: number | null;\r\n  caller_id_name: string | null;\r\n  create_date: string;\r\n  did_as_transfer_caller_id: string | null;\r\n  dial_rule_id: number | null;\r\n  ani_rfc3325: boolean;\r\n  message_did: string | null;\r\n  ani: string | null;\r\n}\r\n\r\nexport async function getExtensions(\r\n  clientId: string\r\n): Promise<AxiosResponse<IExtension[]>> {\r\n  const response = await $api.get(`/api/ver1.0/client/${clientId}/extension/`);\r\n\r\n  return response;\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://apiproxy.telphin.ru/\";\r\n\r\nexport const $api = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\n$api.interceptors.request.use((config: any) => {\r\n  config.headers.Authorization = `Bearer ${sessionStorage.getItem(\r\n    \"accessToken\"\r\n  )}`;\r\n  return config;\r\n});\r\n\r\nexport default $api;\r\n"],"names":["MainPage","dispatch","useDispatch","navigate","useNavigate","accessToken","sessionStorage","getItem","clientId","getExtensions","then","response","setExtensions","data","catch","className","src","phoneBg","alt","onClick","$api","axios","baseURL","interceptors","request","use","config","headers","Authorization"],"sourceRoot":""}